@page "/StartingScreen/{id}"
@using DA_Angebotserstellungssoftware.Users
@using DA_Angebotserstellungssoftware.Proposals
@inject InsertLVsService lvs
@inject IModalService Modal
@inject SharedService _srvice
@inject SelectUserIdService _SelectUserIdService
@inject NavigationManager navigationManager
@inject SearchProposalService searchProposalService 
@inject DeleteProposalService deleteProposalService
<link href="/css/mainComponents.css" rel="stylesheet"/>
<link href="/css/startingScreen_style.css" rel="stylesheet"/>

<div class="default-content-container">
    
    <!-- Blazor Navbar Component -->
    <Navbar_Basic />
    
    <div class="concrete-content-container-startingScreen">
        <div class="header-startingScreen"><h1>Willkommen @userName</h1></div>
        <div class="links-container">
            <!--<div class="Create-img-div"></div>
            <button @onclick="ExecuteCreate" class="Create-btn">Angebot erstellen</button>
            <div class="Edit-img-div"></div>
            <button class="Edit-btn">Leistungsverzeichnis bearbeiten</button>
            <div class="Show-img-div"></div>
            <button class="Show-btn">Angebot anzeigen</button>-->
                    
            <div @onclick="ExecuteCreate" class="Create-img-div">
                <button @onclick="ExecuteCreate">Erstellen</button>
                <p>Erstellen</p>
                <img src="css/images_login_page/CreateOffer.png"/>
            </div>
            <div class="Edit-img-div">
                <button>Bearbeiten</button>
                <p>Bearbeiten</p>
                <img src="css/images_login_page/EditLV.png"/>
            </div>
            <div class="Show-img-div">
                <button>Anzeigen</button>
                <p>Anzeigen</p>
                <img src="css/images_login_page/ShowOffer.png"/>
            </div>
        </div>
        
        <div class="list-body-container">
            <label class="primary-label-text kind-item-label-choose">Letzte Angebote:</label>
            <div class="item-list-container">
                @for (int i = 0; i < proposalNames.Count; i++)
                {
                    int currentIndex = i;
                    <div class="item-container item@(i + 1)">
                        <p class="name-text">@proposalIds[i] @proposalNames[i]</p>
                        <p class="date-text">@proposalLastUpdatedAt[i].ToString("dd-MM-yyyy")</p>
                        <button @onclick="() => ExecuteDelete(proposalIds[currentIndex])" class="button-position-properties-startingScreen button-position-delete-startingScreen">
                            <img class="img-size-starting" src="css/images_login_page/Delete_Icon.png" />
                        </button>
                        <button @onclick="() => ExecuteEdit(proposalIds[currentIndex])" class="button-position-properties-startingScreen button-position-edit-startingScreen">
                            <img class="img-size-starting" src="css/images_login_page/Edit_Icon.png" />
                        </button>
                        <button @onclick="@(()=>Modal.Show<ModalPDF>(@proposalNames[currentIndex], new ModalOptions() { Size = ModalSize.Custom,
                                              SizeCustomClass = "custom-modal"}))" class="button-position-properties-startingScreen button-position-max-startingScreen">
                            <img class="img-size-starting" src="css/images_login_page/Max_Icon.png" />
                        </button>
                        <button class="button-position-properties-startingScreen button-position-download-startingScreen">
                            <img class="img-size-starting" src="css/images_login_page/Download_Icon.png" />
                        </button>
                    </div>
                }
                
            </div>
            <!--<a class="Show-All-Offer-Link">Alle Angebote anzeigen</a>-->
        </div>

      
    </div>
    
    <!-- Blazor Footer Component -->
    <Footer_Basic />
    
</div>

@code {
    [Parameter]
    public string id { get; set; } //User-Id
    public int proposal_id;
    public int convertedNumber; // Konvertierte User-Id
    public string userName;
    public List<string> proposalNames = new List<string>();
    public List<int> proposalIds = new List<int>();
    public List<DateTime> proposalLastUpdatedAt = new List<DateTime>();

    protected override async Task OnInitializedAsync()
    {
        Random rand = new Random();
        proposal_id = rand.Next(1, 9000001);
        convertedNumber = Int32.Parse(id);
        userName = await _SelectUserIdService.ReturnUserName(convertedNumber);
        proposalNames = await searchProposalService.ReturnProposalShortList(convertedNumber);
        proposalIds = await searchProposalService.ReturnProposalIdList(convertedNumber);
        proposalLastUpdatedAt = await searchProposalService.ReturnProposalLastUpdatedAtList(convertedNumber);
    }
    
    public void ExecuteCreate()
    {
        //string filePath = @"E:\Diplomarbeit\Website\DA_Angebotserstellungssoftware\PV-Kleinbaustellen_Ansichten.xlsm";
        string filePath = @"C:\DA\PV-Kleinbaustellen_Ansichten.xlsm";
        lvs.InsertLVs(filePath, proposal_id, convertedNumber);
        navigationManager.NavigateTo($"/customer/{id.ToString()}/{proposal_id.ToString()}");
    }
    
     
    public void ExecuteEdit(int pid)
    {
        navigationManager.NavigateTo($"/customer/{id.ToString()}/{pid.ToString()}");
    }
    
    public void ExecuteDelete(int pid)
    {
        deleteProposalService.DeleteProposal(pid, convertedNumber);
        navigationManager.NavigateTo($"/StartingScreen/{id.ToString()}", forceLoad: true);
    }
}